<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:webfeeds="http://webfeeds.org/rss/1.0">
  <channel>
    <title>dominiclizarraga.github.io</title>
    <description>Rails, Ruby, webapps, Hotwire</description>		
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/rss.xml" rel="self" type="application/rss+xml" />
    <webfeeds:accentColor>00588F</webfeeds:accentColor>
    <webfeeds:icon>http://localhost:4000/css/logo-simple.svg</webfeeds:icon>
    
    <item>
      <title>Decompose for method calls</title>
      <dc:creator>Dom Lizarraga</dc:creator>
      <description>&lt;p&gt;In Ruby, it is possible to &lt;a href=&quot;https://docs.ruby-lang.org/en/3.1/syntax/assignment_rdoc.html#label-Array+Decomposition&quot;&gt;decompose the elements&lt;/a&gt; of arrays/hashes into distinct variables. Since values appear within arrays in a index order, they are unpacked into variables in the same order.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Decompose of an array&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; fruits &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;apple&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;banana&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;cherry&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; x, y, z &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; fruits
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; x
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;apple&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this case we are going to use &lt;em&gt;decompose&lt;/em&gt; for a method call, &lt;em&gt;(with arrays only one splat needed *)&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def send_welcome_email&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;name, email, signup_date&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  puts &lt;span class=&quot;s2&quot;&gt;&quot;Sending welcome email to: #{name}&quot;&lt;/span&gt;
  puts &lt;span class=&quot;s2&quot;&gt;&quot;Email: #{email}&quot;&lt;/span&gt;
  puts &lt;span class=&quot;s2&quot;&gt;&quot;Signed up on: #{signup_date}&quot;&lt;/span&gt;
end

&lt;span class=&quot;c&quot;&gt;# Array of user information&lt;/span&gt;
user_data &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Jane Doe&apos;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&apos;jane.doe@example.com&apos;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&apos;2023-04-01&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Using splat to pass an array of elements&lt;/span&gt;
send_welcome_email&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;user_data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; üëà

&lt;span class=&quot;c&quot;&gt;# This code will output:&lt;/span&gt;
Sending welcome email to: Jane Doe
Email: jane.doe@example.com
Signed up on: 2023-04-01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we are going to &lt;em&gt;decompose&lt;/em&gt; for a hash, &lt;em&gt;(two splats needed **)&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def configure_user&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;profile:, preferences:, settings:&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  puts &lt;span class=&quot;s2&quot;&gt;&quot;Configuring user profile:&quot;&lt;/span&gt;
  puts &lt;span class=&quot;s2&quot;&gt;&quot;Profile: #{profile}&quot;&lt;/span&gt;
  puts &lt;span class=&quot;s2&quot;&gt;&quot;Preferences: #{preferences}&quot;&lt;/span&gt;
  puts &lt;span class=&quot;s2&quot;&gt;&quot;Settings: #{settings}&quot;&lt;/span&gt;
end

&lt;span class=&quot;c&quot;&gt;# Hash of user configuration&lt;/span&gt;
user_configuration &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  profile: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; username: &lt;span class=&quot;s1&quot;&gt;&apos;johndoe&apos;&lt;/span&gt;, language: &lt;span class=&quot;s1&quot;&gt;&apos;EN&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
  preferences: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; theme: &lt;span class=&quot;s1&quot;&gt;&apos;dark&apos;&lt;/span&gt;, notifications: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
  settings: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; privacy: &lt;span class=&quot;s1&quot;&gt;&apos;high&apos;&lt;/span&gt;, location: &lt;span class=&quot;s1&quot;&gt;&apos;off&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Using 2 splats to pass a hash&lt;/span&gt;
configure_user&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;user_configuration&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; üëà

&lt;span class=&quot;c&quot;&gt;# This code will output:&lt;/span&gt;
Configuring user profile:
Profile: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;:username&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;johndoe&quot;&lt;/span&gt;, :language&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;EN&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
Preferences: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;:theme&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dark&quot;&lt;/span&gt;, :notifications&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
Settings: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;:privacy&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;high&quot;&lt;/span&gt;, :location&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;off&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
      <pubDate>Tue, 07 Nov 2023 00:00:00 -0800</pubDate>
      <link>http://localhost:4000/2023/11/07/decompose-for-method-call.html</link>
      <guid isPermaLink="true">http://localhost:4000/2023/11/07/decompose-for-method-call.html</guid>
    </item>
    
    <item>
      <title>Positional vs Keyword arguments</title>
      <dc:creator>Dom Lizarraga</dc:creator>
      <description>&lt;p&gt;When I began programming, I was puzzled by why some parameters were named and others not. &lt;br /&gt;
Seeing &lt;a href=&quot;https://docs.ruby-lang.org/en/3.1/syntax/methods_rdoc.html#label-Array-2FHash+Argument&quot;&gt;*argument_name&lt;/a&gt; or &lt;a href=&quot;https://docs.ruby-lang.org/en/3.1/syntax/methods_rdoc.html#label-Keyword+Arguments&quot;&gt;**argument_name&lt;/a&gt; threw me for a loop. üò≥&lt;/p&gt;

&lt;p&gt;Docs for reference:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.ruby-lang.org/en/3.1/syntax/methods_rdoc.html#label-Array-2FHash+Argument&quot;&gt;*positional_argument&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.ruby-lang.org/en/3.1/syntax/methods_rdoc.html#label-Keyword+Arguments&quot;&gt;**keyword_argument&lt;/a&gt;&lt;/p&gt;
</description>
      <pubDate>Thu, 02 Nov 2023 00:00:00 -0700</pubDate>
      <link>http://localhost:4000/2023/11/02/positional-vs-keyword-params.html</link>
      <guid isPermaLink="true">http://localhost:4000/2023/11/02/positional-vs-keyword-params.html</guid>
    </item>
    
    <item>
      <title>Latest tips &amp; tricks | Rails</title>
      <dc:creator>Dom Lizarraga</dc:creator>
      <description>&lt;p&gt;first filter then map&lt;/p&gt;

&lt;p&gt;.all.each vs find_each&lt;/p&gt;

&lt;p&gt;size vs count vs length&lt;/p&gt;
</description>
      <pubDate>Thu, 26 Oct 2023 00:00:00 -0700</pubDate>
      <link>http://localhost:4000/2023/10/26/lastest-tips-and-tricks.html</link>
      <guid isPermaLink="true">http://localhost:4000/2023/10/26/lastest-tips-and-tricks.html</guid>
    </item>
    
    <item>
      <title>Financial Wisdom Over Forks.</title>
      <dc:creator>Dom Lizarraga</dc:creator>
      <description>&lt;p&gt;&lt;strong&gt;A Dinner Chat with 2 experienced developers.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Recently, I had the opportunity to have dinner and engage in conversation with Chris O. and Harry L. at Rails World. Eager to delve into the nitty-gritty of consulting, I was particularly interested in uncovering the secrets of how to increase chances of success in this field.&lt;/p&gt;

&lt;p&gt;Among the insights shared by &lt;a href=&quot;https://twitter.com/dhh&quot;&gt;DHH&lt;/a&gt; was ‚ÄúThe One-Person Framework‚Äù which enables one to achieve remarkable productivity with &lt;a href=&quot;https://rubyonrails.org/&quot;&gt;Rails&lt;/a&gt;. This framework allows for a comprehensive understanding of everything from backend to frontend to deployment, all while Rails navigates through the complexities aiming for simplicity. Inspired by DHH‚Äôs insights, I‚Äôm keen on taking advantage of ‚ÄúThe One-Person Framework‚Äù to enhance my consulting practice. The discussion unfolded as follows:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/the_one_person_framwork.jpeg&quot; alt=&quot;DHH at Rails World&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;accounting&quot;&gt;Accounting&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Always set aside 30% of each income you receive from consulting to cushion yourself when it‚Äôs time to pay taxes. 30 is a good figure; it‚Äôs enough.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Hire an accountant; don‚Äôt do it yourself, as it can become difficult.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;accounts&quot;&gt;Accounts&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The money that a business generates is one thing, and it must be in an exclusive account. Separate it from everything else (LLC or whatever structure).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create a personal account for personal expenses, and avoid mixing expenses. It might seem easy initially, but it can become difficult to handle.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sales&quot;&gt;Sales&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Get with your referals, friends, uncles, cousins, people you were in school with and offer your services, it‚Äôd more easy if they own a company or have a decision makier position.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When it comes to consulting, once you finish a project and haven‚Äôt worked on securing another project, it‚Äôs very likely that you‚Äôll end up doing nothing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Therefore, in the hypothetical case that you finish ‚ÄúProject A‚Äù in December, dedicate 80% of your time to the project to get it done, and 20% on sales activities (attending meetups, calls, creating content, follow-ups).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then, as you get closer to finishing the project, switch to spending 80% of your time on selling and 20% on the project so that when you finish ‚ÄúProject A‚Äù in December, you have ‚ÄúProject B‚Äù waiting in January.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;always-work-with-contracts&quot;&gt;Always Work with Contracts&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Include a clause specifying that if the client tells you not to finish, he has to pay you at the point or progress where you leave the project&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;work-on-building-trust-with-clients&quot;&gt;Work on Building Trust with Clients&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;When you develop for a customer, aim to either cut their costs or increase their revenue/productivity or help them have more control over their business therefore &lt;strong&gt;you‚Äôll gain their trust.&lt;/strong&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Cut their costs:&lt;/em&gt; ‚ÄúOptimize processes to save your customer money.‚Äù&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Increase their revenue or productivity:&lt;/em&gt; ‚ÄúEnhance features to boost customer revenue and efficiency.‚Äù&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Help them have more control:&lt;/em&gt; ‚ÄúEmpower customers with tools for informed business decisions.‚Äù&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Earned trust will increase eventually like compound interest over the years, as they will share with others how you helped them and how efficient you are.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;where-to-find-potential-customers&quot;&gt;Where to Find Potential Customers&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;One approach is to get in touch with local marketing agencies and offer to outsource their work to you, whether it‚Äôs web apps or web pages. This is beneficial as it‚Äôs easier to secure payments from organizations than individuals, and it also enhances your portfolio and reputation.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For the point above üëÜ, show up! Don‚Äôt just email them; meet them in person, attend meetups, even those not related to tech.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Another approach is to reconnect with previous customers and inquire if there‚Äôs another department you can assist; this should happen naturally if you‚Äôve had a good working relationship.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dont-convince-customers-to-have-a-rails-app-when-they-dont-really-need-it-avoid-this-&quot;&gt;Don‚Äôt Convince Customers to Have a Rails App When They Don‚Äôt Really Need It (Avoid This üö´)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;One individual secured a contract where the customer apparently needed a WordPress management system, but he kept pushing for a Rails application.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Somehow, the customer paid him in advance, and after a few months, rejected the project and asked for a refund. By then, he had already spent the money without setting aside funds for taxes, and found himself having to answer to both the customer and the tax authorities.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Mon, 09 Oct 2023 00:00:00 -0700</pubDate>
      <link>http://localhost:4000/2023/10/09/financial-wisdom-over-forks.html</link>
      <guid isPermaLink="true">http://localhost:4000/2023/10/09/financial-wisdom-over-forks.html</guid>
    </item>
    
    <item>
      <title>How to crack your next code challenge üßÆ</title>
      <dc:creator>Dom Lizarraga</dc:creator>
      <description>&lt;p&gt;&lt;strong&gt;Notes that will help you understand and then solve a code challenge interview.&lt;/strong&gt;&lt;/p&gt;
</description>
      <pubDate>Sat, 30 Sep 2023 00:00:00 -0700</pubDate>
      <link>http://localhost:4000/2023/09/30/hot-to-crack-you-next-code-challenges.html</link>
      <guid isPermaLink="true">http://localhost:4000/2023/09/30/hot-to-crack-you-next-code-challenges.html</guid>
    </item>
    
    <item>
      <title>Search bar in Rails üîç</title>
      <dc:creator>Dom Lizarraga</dc:creator>
      <description>&lt;p&gt;&lt;strong&gt;Notes from building a Search bar.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.justinweiss.com/articles/search-and-filter-rails-models-without-bloating-your-controller/&quot;&gt;Justin Weiss search bar using scopes.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://web-crunch.com/posts/turbo-charged-real-time-search-ruby-on-rails-7&quot;&gt;Search bar using turbo frames.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.testdouble.com/posts/2021-09-09-how-to-build-a-search-engine-with-ruby-on-rails/&quot;&gt;Search bar Test double.&lt;/a&gt;&lt;/p&gt;
</description>
      <pubDate>Sun, 10 Sep 2023 00:00:00 -0700</pubDate>
      <link>http://localhost:4000/2023/09/10/search-bar-rails.html</link>
      <guid isPermaLink="true">http://localhost:4000/2023/09/10/search-bar-rails.html</guid>
    </item>
    
    <item>
      <title>Chartkick gem vs chart.js</title>
      <dc:creator>Dom Lizarraga</dc:creator>
      <description>&lt;p&gt;&lt;strong&gt;Notes from chartkick gem implementation&lt;/strong&gt;&lt;/p&gt;
</description>
      <pubDate>Sun, 20 Aug 2023 00:00:00 -0700</pubDate>
      <link>http://localhost:4000/2023/08/20/chartkick-gem.html</link>
      <guid isPermaLink="true">http://localhost:4000/2023/08/20/chartkick-gem.html</guid>
    </item>
    
    <item>
      <title>LLM Langchain.rb ü¶ú | Andrei Bondarev</title>
      <dc:creator>Dom Lizarraga</dc:creator>
      <description>&lt;p&gt;While I was in New York I had the opportunity to attend a &lt;a href=&quot;https://www.meetup.com/es-ES/nyc-rb/&quot;&gt;nyc.rb&lt;/a&gt; webinar where the main subject to discuss was going to be LLMs and what is the Ruby community doing about, &lt;a href=&quot;https://twitter.com/rushing_andrei&quot;&gt;Andrei Bondarev&lt;/a&gt; was the speaker.&lt;/p&gt;

&lt;p&gt;I know it was a webinar you can attend it wherever you are! However I found it because I was looking for a monthly meeting in NY, also I found that &lt;a href=&quot;https://www.meetup.com/es-ES/nyc-on-rails/&quot;&gt;NYC on rails&lt;/a&gt; is about to start so folks from NY please support &lt;a href=&quot;https://twitter.com/aviflombaum&quot;&gt;Avi&lt;/a&gt; in this journey üôè.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/aviflombaum/status/1686015466290991107&quot;&gt;Tweet&lt;/a&gt; where Avi anounces that he is going to take up rails monthly meeting (they were held off since 2016).&lt;/p&gt;

&lt;p&gt;OK moving on from ads here I‚Äôll share with you the resources that I have gone over the last week so I got my feet wet with this new topic called LLMs (Large Language Models).&lt;/p&gt;

&lt;p&gt;What is LLMs?&lt;/p&gt;

&lt;p&gt;It‚Äôs a subset of Deep Learning as well as Generative AI, both belong to AI.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=G2fqAlgmoPo&quot;&gt;Google video that explains it very neat&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What is langchain then? ü¶ú&lt;/p&gt;

&lt;p&gt;How LLMs work?&lt;/p&gt;

&lt;p&gt;Why are they useful?&lt;/p&gt;

&lt;p&gt;Use cases?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/18IkiST1goY2nXA61albDx1WUHCdf9tkaPMYthxLiONQ/edit#slide=id.p&quot;&gt;Andrei NYC.rb slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/andreibondarev/langchainrb&quot;&gt;Main Langchain ruby repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chatbot Proof of Concept:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zben/superchat&quot;&gt;Multi-Agent Chatbot developed by Flexport member (Ben Zhang)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Courses:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://learn.deeplearning.ai/langchain/lesson/1/introduction&quot;&gt;LangChain for LLM Application Development from Deep Learning AI&lt;/a&gt;&lt;/p&gt;
</description>
      <pubDate>Tue, 01 Aug 2023 00:00:00 -0700</pubDate>
      <link>http://localhost:4000/2023/08/01/llm-langchain-rb.html</link>
      <guid isPermaLink="true">http://localhost:4000/2023/08/01/llm-langchain-rb.html</guid>
    </item>
    
    <item>
      <title>NYU Startup Summer program</title>
      <dc:creator>Dom Lizarraga</dc:creator>
      <description>&lt;p&gt;&lt;strong&gt;Notes from NYU clases&lt;/strong&gt;&lt;/p&gt;
</description>
      <pubDate>Mon, 24 Jul 2023 00:00:00 -0700</pubDate>
      <link>http://localhost:4000/2023/07/24/NYU-startup-summer.html</link>
      <guid isPermaLink="true">http://localhost:4000/2023/07/24/NYU-startup-summer.html</guid>
    </item>
    
    <item>
      <title>How I learned rpsec</title>
      <dc:creator>Dom Lizarraga</dc:creator>
      <description>&lt;p&gt;&lt;strong&gt;Rspec learning resources&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The best way to get a grasp of testing and &lt;em&gt;rspec&lt;/em&gt; in general is to start from scratch a project and start writing down each test, that way you‚Äôll be able to see what happens if you forget to close either a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;context&lt;/code&gt; block or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;it&lt;/code&gt; block or even more intricate subjects like what‚Äôs the difference between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;describe&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;context&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;While developing a freelance project I wanted to add testing as a way to push myself to learn more about testing and also give &lt;em&gt;rspec&lt;/em&gt; a try and by doing it I learned how to use gems like: &lt;a href=&quot;https://github.com/faker-ruby/faker&quot;&gt;faker&lt;/a&gt;, &lt;a href=&quot;https://github.com/thoughtbot/shoulda-matchers&quot;&gt;shoulda-matchers&lt;/a&gt;, &lt;a href=&quot;https://github.com/thoughtbot/factory_bot_rails&quot;&gt;factory_bot&lt;/a&gt; and finally &lt;a href=&quot;rspec-rails&quot;&gt;rspec&lt;/a&gt;. üé≤&lt;/p&gt;

&lt;p&gt;You‚Äôll additionally acquire&lt;/p&gt;

&lt;p&gt;‚Äì how to read the output of the test suite in the console.&lt;/p&gt;

&lt;p&gt;‚Äì difference between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build&lt;/code&gt; &lt;a href=&quot;https://stackoverflow.com/questions/14098031/whats-the-difference-between-the-build-and-create-methods-in-factorygirl&quot;&gt;more details.&lt;/a&gt;;&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;doesn&apos;t&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;persist&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;build(:user,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;name:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;expect(user.name).to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;eq(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;does&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;persist&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;create(:user,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;name:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Jane&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;expect(user.persisted?).to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;‚Äì how to integrate devise with rspec &lt;mark&gt;config.include Devise::Test::ControllerHelpers, type: :requests&lt;/mark&gt; &lt;a href=&quot;https://henrytabima.github.io/rails-setup/docs/devise/test-helpers&quot;&gt;blog&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;‚Äì difference between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fixtures&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;factories&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;‚Äì and finally what does &lt;mark&gt;config.include FactoryBot::Syntax::Methods&lt;/mark&gt; actually do? &lt;a href=&quot;https://github.com/thoughtbot/factory_bot/blob/main/GETTING_STARTED.md#configure-your-test-suite&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;Here are also another resources that I followed in order to cement more my knowledge.&lt;/ins&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2 hours long video from Type Fast a Youtube channel that makes rails tutorials. The video is very thorough. Covers model, requests, background job testing and system tests.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BXaMRm1FDa8&amp;amp;list=PPSV&quot;&gt;Fairly comprehensive starter guide to RSpec&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1 hour long rspec tutorial from Type Fast was well (it‚Äôs more on the setup for an app) &lt;a href=&quot;https://www.youtube.com/watch?v=D889P37r3bc&amp;amp;list=PPSV&quot;&gt;testing setup with rspec&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How to test models &lt;a href=&quot;https://www.youtube.com/watch?v=Spogv4o8haM&amp;amp;list=PPSV&quot;&gt;CJ Avila&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How to use factory_bot &lt;a href=&quot;https://www.youtube.com/watch?v=7JdyQEcZ7F8&amp;amp;list=PPSV&quot;&gt;Deanin, short tutorial&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Full marathon of rspec tutorial (reading not video) from syntax, how to test a model and installing rspec &lt;a href=&quot;https://remimercier.com/series/rspec/&quot;&gt;Remi rspec tutorials&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The Complete Guide to Rails Testing by Jason Swett &lt;a href=&quot;The Complete Guide to Rails Testing&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
      <pubDate>Wed, 14 Jun 2023 00:00:00 -0700</pubDate>
      <link>http://localhost:4000/2023/06/14/how_i_learned_rspec.html</link>
      <guid isPermaLink="true">http://localhost:4000/2023/06/14/how_i_learned_rspec.html</guid>
    </item>
    
  </channel>
</rss>
